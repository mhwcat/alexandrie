<!DOCTYPE html>
<html lang="en">

<head>
    <title>Register - {{ instance.title }}</title>
    {{> partials/head}}
    <style>
        .hero {
            width: 100%;
        }

        .hero-content-container {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            width: 100%;
            padding: 40px 10px 10px;
        }

        .hero-title {
            font-size: 30px;
            font-weight: bolder;
            text-align: center;
        }

        .hero-subtitle {
            font-size: 24px;
            text-align: center;
        }

        .separator-container {
            width: 100%;
            display: grid;
            grid-template-rows: 12px 10px;
            grid-template-columns: 1fr;
        }

        .separator-flex {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100%;
        }

        .separator {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 1400px;
            height: 100%;
            border-bottom: 2px solid var(--fg-color);
        }

        .page-container {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 17px;
        }

        .register-container {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            gap: 10px;
            margin: 10px;
            font-size: 17px;
            width: 100%;
            max-width: 450px;
        }

        .register-content {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: flex-start;
            flex-direction: column;
            gap: 10px;
        }

        @media (max-width: 1400px) {
            .register-content {
                width: 100%;
            }

            .separator {
                width: 90%;
            }
        }

        .register-field {
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        .register-checkbox-field {
            padding: 0;
        }

        .register-label {
            font-weight: bold;
            padding-bottom: 5px;
        }

        .register-checkbox-label {
            font-weight: bold;
        }

        .register-input {
            outline: none;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            padding: 7px 10px;
            color: var(--fg-color);
            background: transparent;
            font: inherit;
            font-size: 16px;
            font-weight: 600;
            border-radius: 5px;
            border: solid 2px var(--darker-bg-color);
            transition: border-color 0.15s;
            margin: 0;
        }

        .register-input:focus {
            border-color: var(--fg-color);
        }

        .register-input:invalid {
            box-shadow: none;
            {{!-- border-bottom: 2px solid #C00; --}}
        }

        .register-checkbox {
            position: relative;
            vertical-align: middle;
            bottom: 1px;
        }

        .register-button {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            border: 2px solid var(--darker-bg-color);
            border-radius: 5px;
            background: transparent;
            cursor: pointer;
            font: inherit;
            font-weight: bold;
            text-align: center;
            color: inherit;
            background-color: inherit;
            padding: 7px 20px;
            transition: background-color 0.15s, border-color 0.15s;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            width: 100%;
        }

        .register-button:hover,
        .register-button:focus {
            border: 2px solid var(--fg-color);
            background-color: var(--dark-bg-color);
        }

        .register-button:disabled {
            border: 2px solid var(--darker-bg-color);
            background-color: var(--dark-bg-color);
            cursor: default;
        }

        .register-link {
            width: 100%;
        }

        .register-error-msg {
            padding: 10px;
            background-color: var(--danger-bg-color);
            color: var(--danger-fg-color);
            border-radius: 5px;
            margin: 5px 0;
            font-weight: bold;
        }

        .form-separator-container {
            display: grid;
            grid-gap: 10px;
            grid-template-rows: 1fr;
            grid-template-columns: 1fr min-content 1fr;
            width: 100%;
            align-items: center;
            justify-content: center;
        }

        .form-separator {
            height: 2px;
            width: 100%;
            background-color: var(--fg-color);
        }

        .form-separator-text {
            font-weight: 800;
        }

        @media (prefers-color-scheme: dark) {
            .register-input {
                border-color: var(--darker-fg-color);
            }

            .register-button {
                border-color: var(--darker-fg-color);
            }

            .register-button:disabled {
                border-color: var(--darker-fg-color);
                background-color: var(--dark-fg-color);
                color: var(--bg-color);
            }
        }
    </style>
</head>

<body>
    {{> partials/navbar}}
    <div class="hero">
        <div style="height: 50px"></div>
        <div class="hero-content-container">
            <div class="hero-title">Register page</div>
            <div class="hero-subtitle">Register for a new account.</div>
        </div>
    </div>
    <div class="separator-container">
        <div class="separator-flex">
            <div class="separator"></div>
        </div>
    </div>
    <div class="page-container">
        <div class="register-container">
            {{#if (equal local_enabled true)}}
            <form class="register-content" method="POST" action="account/register">
                <div class="register-field">
                    <label class="register-label" for="email">Email:</label>
                    <input class="register-input" type="email" name="email" id="email" placeholder="Enter email..." autocomplete="email" required>
                </div>
                <div class="register-field">
                    <label class="register-label" for="name">Full name:</label>
                    <input class="register-input" type="text" name="name" id="name" placeholder="Enter full name..." autocomplete="name" required>
                </div>
                <div class="register-field">
                    <label class="register-label" for="password">Password:</label>
                    <input class="register-input" type="password" name="password" id="password" placeholder="Enter password..." autocomplete="new-password" required>
                </div>
                <div class="register-field">
                    <label class="register-label" for="confirm-password">Confirm password:</label>
                    <input class="register-input" type="password" name="confirm-password" id="confirm-password" placeholder="Confirm password..." required>
                </div>
                <div class="register-field register-checkbox-field">
                    <label class="register-checkbox-label">
                        <input class="register-checkbox" type="checkbox" name="remember">
                        Remember me for 30 days
                    </label>
                </div>
                {{#if (equal flash.kind "error")}}
                <div class="register-field register-error-msg">
                    Error: {{ flash.message }}
                </div>
                {{/if}}
                <input type="submit" value="Register" class="register-button">
                <a class="register-link" href="account/login">
                    <div class="register-button">Already have an account ?</div>
                </a>
            </form>
            {{/if}}
            {{#if (equal has_separator true)}}
            <div class="form-separator-container">
                <div class="form-separator"></div>
                <div class="form-separator-text">OR</div>
                <div class="form-separator"></div>
            </div>
            {{/if}}
            {{#if (equal github_enabled true)}}
            <a class="register-link" href="account/github">
                <div class="register-button">Register with GitHub</div>
            </a>
            {{/if}}
            {{#if (equal gitlab_enabled true)}}
            <a class="register-link" href="account/gitlab">
                <div class="register-button">Register with GitLab</div>
            </a>
            {{/if}}
        </div>
    </div>
    {{#if (equal local_enabled true)}}
    <script type="module">
        import init, * as Rust from "./assets/wasm/wasm_pbkdf2.js";

        // A byte order mark character can show up as a result of the conversion
        // between Rust strings (UTF-8) and JavaScript strings (UTF-16).
        // This function removes it if there is one.
        function removeByteOrderMark(inputString) {
            return (inputString.charCodeAt(0) === 0xFEFF)
                ? inputString.substr(1)
                : inputString;
        }

        (async () => {
            await init();
            const form = document.querySelector('form.register-content');
            const email = form.querySelector('input[type="email"]');
            const password = form.querySelector('input#password');
            const confirm_password = form.querySelector('input#confirm-password');
            const button = form.querySelector('input[type="submit"]');
            form.addEventListener("submit", function (event) {
                event.preventDefault();
                button.disabled = true;
                button.value = "Loading...";
                password.value = removeByteOrderMark(Rust.pbkdf2_encode(password.value, email.value, 5000));
                confirm_password.value = removeByteOrderMark(Rust.pbkdf2_encode(confirm_password.value, email.value, 5000));
                this.submit();
            });
        })();
    </script>
    {{/if}}    
</body>

</html>